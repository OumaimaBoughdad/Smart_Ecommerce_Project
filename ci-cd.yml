name: CI/CD Pipeline

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]
  workflow_dispatch:
    inputs:
      deploy:
        description: 'Build and push images'
        required: true
        default: 'true'
        type: choice
        options:
          - 'true'
          - 'false'

jobs:
  build-and-push:
    runs-on: ubuntu-latest
    if: github.event_name == 'workflow_dispatch' && github.event.inputs.deploy == 'true' || github.event_name != 'workflow_dispatch'
    steps:
      - uses: actions/checkout@v2
      
      - name: Login to Docker Hub
        uses: docker/login-action@v1
        with:
          username: ${{ secrets.DOCKER_HUB_USERNAME }}
          password: ${{ secrets.DOCKER_HUB_ACCESS_TOKEN }}
      
      - name: Build and push scraper image
        uses: docker/build-push-action@v2
        with:
          context: ./agent_scraping
          push: true
          tags: ${{ secrets.DOCKER_HUB_USERNAME }}/ecommerce-scraper:latest
      
      - name: Build and push ML model image
        uses: docker/build-push-action@v2
        with:
          context: ./Analyse-et-s-lection-des-Top-K-produits
          push: true
          tags: ${{ secrets.DOCKER_HUB_USERNAME }}/ecommerce-ml:latest,  ${{ secrets.DOCKER_HUB_USERNAME }}/ecommerce-ml:fixed
      
      - name: Build and push dashboard image
        uses: docker/build-push-action@v2
        with:
          context: ./LLM_pour_enrichissement-et-synthese
          push: true
          tags: ${{ secrets.DOCKER_HUB_USERNAME }}/ecommerce-dashboard:latest

  deploy:
    needs: build-and-push
    runs-on: ubuntu-latest
    if: github.event_name == 'workflow_dispatch' && github.event.inputs.deploy == 'true'
    steps:
      - uses: actions/checkout@v2
      
      - name: Set up kubectl
        uses: azure/setup-kubectl@v1
        
      - name: Create kubeconfig
        run: |
          mkdir -p $HOME/.kube
          echo "${{ secrets.KUBE_CONFIG_DATA }}" | base64 -d > $HOME/.kube/config
          chmod 600 $HOME/.kube/config
          
      - name: Deploy ConfigMap
        run: kubectl apply -f k8s/csv-configmap.yaml
        
      - name: Deploy PVC
        run: kubectl apply -f k8s/pvc.yaml
        
      - name: Deploy ML Model Job
        run: kubectl apply -f k8s/ml-model-job.yaml
        
      - name: Wait for ML Model Job to complete
        run: |
          echo "Waiting for ML model job to complete..."
          kubectl wait --for=condition=complete job/ml-model-job --timeout=300s
        
      - name: Deploy Dashboard
        run: |
          kubectl apply -f k8s/dashboard-deployment.yaml
          kubectl apply -f k8s/dashboard-service.yaml